{"version":3,"sources":["actions/index.js","pages/ConnectPage.jsx","pages/BleNotSupported.jsx","components/TestButton.jsx","components/ScenarioButton.jsx","data/test-data.js","data/home-scenario-data.js","pages/Home.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","reducer/index.js","store/index.js","components/ScenesButton.jsx","data/scenario-data.js","pages/ScenarioPage.jsx","index.js"],"names":["activatePneumatic","val","dispatch","getState","a","characteristic","console","log","encoder","TextEncoder","writeValue","encode","type","payload","ConnectButton","label","handleEvent","useDispatch","Box","textAlign","Fab","sx","borderRadius","onClick","serviceUuid","characteristicUuid","navigator","bluetooth","requestDevice","filters","name","optionalServices","device","gatt","connect","server","getPrimaryService","service","getCharacteristic","myDescriptor","readValue","value","decoder","TextDecoder","decode","variant","BleNotSupported","Grid","href","target","rel","TestButton","pnuematic","color","textColor","title","subtitle","boxShadow","m","pt","Paper","raised","display","minWidth","minHeight","background","CardActionArea","Typography","fontSize","gutterBottom","component","fontWeight","toSearch","to","pathname","currentScenario","search","Card","elevation","Home","style","width","height","overflow","msOverflowStyle","testData","map","data","homeScenarioData","ScenarioButton","App","useState","supportsBluetooth","setSupportsBluetooth","isConnected","useSelector","state","useEffect","ConnectPage","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","connectDevice","reducer","action","store","createStore","applyMiddleware","thunk","ScenesButton","audio","toPlay","Audio","play","ScenarioPage","useLocation","scenarioData","doings","ReactDOM","render","StrictMode","path","element","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+QAqCaA,EAAoB,SAACC,GAChC,8CAAO,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,+DACsBD,IAAnBE,EADH,EACGA,eACRC,QAAQC,IAAIF,GACRG,EAAU,IAAIC,YAAY,SAHzB,SAICJ,EAAeK,WAAWF,EAAQG,OAAOV,IAJ1C,OAKLC,EAAS,CACPU,KAAM,qBACNC,QAASR,IAPN,2CAAP,yD,gBCdaS,EAjBO,SAAC,GAA2B,EAAzBC,MAAyB,EAAlBC,YAAmB,IAC3Cd,EAAWe,cAEjB,OACE,cAACC,EAAA,EAAD,CAAKC,UAAU,SAAf,SACE,eAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,aAAc,GACpBC,QAAS,kBAAMrB,EDbrB,uCAAO,WAAOA,GAAP,+BAAAE,EAAA,6DACCoB,EAAc,uCACdC,EAAqB,uCAE3BnB,QAAQC,IAAI,sCAJP,SAMgBmB,UAAUC,UAAUC,cAAc,CACrDC,QAAS,CAAC,CAAEC,KAAM,CAAC,YACnBC,iBAAkB,CAACP,KARhB,cAMCQ,EAND,OAWL1B,QAAQC,IAAI,gCAXP,SAYgByB,EAAOC,KAAKC,UAZ5B,cAYCC,EAZD,OAcL7B,QAAQC,IAAI,sBAdP,UAeiB4B,EAAOC,kBAAkBZ,GAf1C,eAeCa,EAfD,OAiBL/B,QAAQC,IAAI,6BAjBP,UAkBwB8B,EAAQC,kBAAkBb,GAlBlD,eAkBCpB,EAlBD,OAoBLC,QAAQC,IAAI,yBApBP,UAqBoBF,EArBpB,eAqBDkC,EArBC,OAuBLjC,QAAQC,IAAI,yBAvBP,UAwBegC,EAAaC,YAxB5B,QAwBCC,EAxBD,OA0BDC,EAAU,IAAIC,YAAY,SAC9BrC,QAAQC,IAAI,sCAAwCmC,EAAQE,OAAOH,IAEnEvC,EAAS,CACPU,KAAM,oBACNC,QAAS0B,IA/BN,4CAAP,wDCcMM,QAAQ,WAHV,UAKE,cAAC,IAAD,IALF,gB,SC2BSC,EAnCS,WACtB,OACE,cAAC5B,EAAA,EAAD,UACE,eAAC6B,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,UACE,wFAEF,+EAEE,mBACEC,KAAK,oEACLC,OAAO,SACPC,IAAI,sBAHN,qBAFF,gCAWA,yIAIA,sH,2BC6BOC,EAhDI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,UAAWC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClDtD,EAAWe,cACjB,OACE,cAACC,EAAA,EAAD,CAAKG,GAAI,CAAEoC,UAAW,EAAGC,EAAG,EAAGC,GAAI,GAAnC,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,EACRhB,QAAQ,WACRxB,GAAI,CACFyC,QAAS,eACTxC,aAAc,EACdyC,SAAU,IACVC,UAAW,IACXC,WAAYZ,EACZA,MAAOC,GATX,SAYE,eAACY,EAAA,EAAD,CAAgB3C,QAAS,kBAAMrB,EAASF,EAAkBoD,KAA1D,UACE,cAACe,EAAA,EAAD,CAAY9C,GAAI,CAAE+C,SAAU,IAAMf,MAAM,iBAAiBgB,cAAY,EAArE,SACE,yBAEF,cAACF,EAAA,EAAD,CAAY9C,GAAI,CAAE+C,SAAU,IAAMvB,QAAQ,KAAKyB,UAAU,MAAzD,SACGf,IAEH,uBACA,cAACY,EAAA,EAAD,CACE9C,GAAI,CAAE+C,SAAU,GAAIG,WAAY,QAChC1B,QAAQ,KACRyB,UAAU,MAHZ,SAKGd,Y,iBCOEL,EArCI,SAAC,GAA2C,IAAzCqB,EAAwC,EAAxCA,SAAUnB,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAChD,OACE,cAAC,IAAD,CACEkB,GAAI,CACFC,SAAU,YACVC,gBAAiB,EACjBC,OAAQJ,GAJZ,SAOE,cAACtD,EAAA,EAAD,CAAKwC,EAAG,EAAGC,GAAI,EAAf,SACE,cAACkB,EAAA,EAAD,CACEC,UAAW,EACXjC,QAAQ,WACRxB,GAAI,CACFyC,QAAS,eACTxC,aAAc,EACdyC,SAAU,IACVC,UAAW,IACXC,WAAYZ,EACZA,MAAOC,GATX,SAYE,cAACY,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE9C,GAAI,CAAE+C,SAAU,IAAKG,WAAY,QACjC1B,QAAQ,KACRyB,UAAU,MAHZ,SAKGf,aClCA,GACb,CACEH,UAAW,IACXC,MAAO,MACPC,UAAW,QACXC,MAAO,eACPC,SAAU,QAEZ,CACEJ,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPC,SAAU,kBAEZ,CACEJ,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPC,SAAU,eAEZ,CACEJ,UAAW,IACXC,MAAO,OACPC,UAAW,QACXC,MAAO,eACPC,SAAU,SAEZ,CACEJ,UAAW,IACXC,MAAO,SACPC,UAAW,QACXC,MAAO,eACPC,SAAU,cAEZ,CACEJ,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPC,SAAU,oBCzCC,GACb,CACEgB,SAAU,KACVnB,MAAO,aACPC,UAAW,QACXC,MAAO,kCAET,CACEiB,SAAU,KACVnB,MAAO,aACPC,UAAW,QACXC,MAAO,gBAET,CACEiB,SAAU,KACVnB,MAAO,aACPC,UAAW,QACXC,MAAO,gBAET,CACEiB,SAAU,KACVnB,MAAO,aACPC,UAAW,QACXC,MAAO,iBCwCIwB,EAzDF,WACX,OACE,gCACE,sCACA,uBACA,8BACE,qBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVrB,QAAS,OACTsB,gBAAiB,QANrB,SASGC,EAASC,KAAI,SAACC,GACb,OACE,cAAC,EAAD,CACEnC,UAAWmC,EAAKnC,UAChBC,MAAOkC,EAAKlC,MACZC,UAAWiC,EAAKjC,UAChBC,MAAOgC,EAAKhC,MACZC,SAAU+B,EAAK/B,kBAOzB,2CACA,uBACA,8BACE,qBACEwB,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVrB,QAAS,OACTsB,gBAAiB,QANrB,SASGI,EAAiBF,KAAI,SAACC,GACrB,OACE,cAACE,EAAD,CACEjB,SAAUe,EAAKf,SACfnB,MAAOkC,EAAKlC,MACZC,UAAWiC,EAAKjC,UAChBC,MAAOgC,EAAKhC,mBCfbmC,MA/Bf,WAAgB,IAAD,EACqCC,oBAAS,GAD9C,mBACNC,EADM,KACaC,EADb,KAEPC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eAQjD,OANAG,qBAAU,WACJvE,UAAUC,WACZkE,GAAqB,KAEtB,IAGD,iCACID,IAAsBE,GACtB,8BACE,cAAC,EAAD,OAGFA,GAAeF,GACf,8BACE,cAACM,EAAD,MAGHJ,GACC,8BACE,cAAC,EAAD,UCnBUK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCPRQ,EAAgB,CACpBnB,aAAa,EACboB,cAAe,GACf7G,eAAgB,IAuBH8G,EApBC,WAAoC,IAAnCnB,EAAkC,uDAA1BiB,EAAeG,EAAW,uCACjD,OAAQA,EAAOxG,MACb,IAAK,oBACH,MAAO,CACLkF,aAAa,EACboB,cAAeE,EAAOvG,QACtBR,eAAgB+G,EAAOvG,SAE3B,IAAK,qBAEH,OADAP,QAAQC,IAAIyF,GACL,CACLF,aAAa,EACboB,cAAelB,EAAMkB,cACrB7G,eAAgB+G,EAAOvG,SAE3B,QACE,OAAOmF,IClBAqB,EAAQC,YAAYH,EAASI,YAAgBC,M,wBCuC3CC,EApCM,SAAC,GAAmD,IAAjDrE,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOmE,EAAY,EAAZA,MACpDxH,EAAWe,cACb0G,EAAS,IAAIC,MAAMF,GAOvB,OACE,cAACxG,EAAA,EAAD,CAAKG,GAAI,CAAEoC,UAAW,EAAGC,EAAG,EAAGC,GAAI,GAAnC,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,EACRhB,QAAQ,WACRxB,GAAI,CACFyC,QAAS,eACTxC,aAAc,EACdyC,SAAU,IACVC,UAAW,IACXC,WAAYZ,EACZA,MAAOC,GATX,SAYE,eAACY,EAAA,EAAD,CAAgB3C,QAAS,kBAlB7BoG,EAAOE,YACP3H,EAASF,EAAkBoD,KAiBvB,UACE,cAACe,EAAA,EAAD,CAAY9C,GAAI,CAAE+C,SAAU,IAAMf,MAAM,iBAAiBgB,cAAY,EAArE,SACE,yBAEF,cAACF,EAAA,EAAD,CAAY9C,GAAI,CAAE+C,SAAU,IAAMvB,QAAQ,KAAKyB,UAAU,MAAzD,SACGf,YCnCE,GACb,KAAM,CACJ,CACEH,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,6DAGX,KAAM,CACJ,CACEtE,UAAW,IACXC,MAAO,QACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,6DAGX,KAAM,CACJ,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,4DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,6DAGX,KAAM,CACJ,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,2DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,2DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,2DAET,CACEtE,UAAW,IACXC,MAAO,YACPC,UAAW,QACXC,MAAO,eACPmE,MAAO,6DC9HE,SAASI,IACtB,IAAMzB,EAAW0B,cACjBzH,QAAQC,IAAI8F,EAASzB,QACrB,IAAMJ,EAAW6B,EAASzB,OAE1B,OACE,gCACE,uCACA,cAAC,IAAD,CAAMH,GAAG,IAAT,SACE,cAAC,IAAD,MAEF,qBACEO,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVrB,QAAS,OACTsB,gBAAiB,QANrB,SASG4C,EAAaxD,GAAUc,KAAI,SAAC2C,GAC3B,OACE,cAAC,EAAD,CACE7E,UAAW6E,EAAO7E,UAClBC,MAAO4E,EAAO5E,MACdC,UAAW2E,EAAO3E,UAClBC,MAAO0E,EAAO1E,MACdmE,MAAOO,EAAOP,gBCrB5BQ,IAASC,OACP,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACE,cAAC,IAAMe,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAACR,EAAD,MACjC,cAAC,IAAD,CAAOO,KAAK,IAAIC,QAAS,cAAC,EAAD,eAMjCC,SAASC,eAAe,SP0GpB,kBAAmB9G,WACrBA,UAAU+G,cAAcC,MACrB/B,MAAK,SAACgC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNxI,QAAQwI,MAAMA,EAAMC,YOrG5BvC,M","file":"static/js/main.d822eb18.chunk.js","sourcesContent":["export const connectToBluetooth = () => {\n  return async (dispatch) => {\n    const serviceUuid = \"e472cea9-3ae8-4d96-951e-7086fe17d416\";\n    const characteristicUuid = \"7abd909a-a9e5-4409-96a9-7aa4fa33426f\";\n\n    console.log(\"Requesting any Bluetooth Device...\");\n\n    const device = await navigator.bluetooth.requestDevice({\n      filters: [{ name: [\"VAware\"] }],\n      optionalServices: [serviceUuid],\n    });\n\n    console.log(\"Connecting to GATT Server...\");\n    const server = await device.gatt.connect();\n\n    console.log(\"Getting Service...\");\n    const service = await server.getPrimaryService(serviceUuid);\n\n    console.log(\"Getting Characteristic...\");\n    const characteristic = await service.getCharacteristic(characteristicUuid);\n\n    console.log(\"Getting Descriptor...\");\n    let myDescriptor = await characteristic;\n\n    console.log(\"Reading Descriptor...\");\n    const value = await myDescriptor.readValue();\n\n    let decoder = new TextDecoder(\"utf-8\");\n    console.log(\"> Characteristic User Description: \" + decoder.decode(value));\n\n    dispatch({\n      type: \"CONNECT_BLUETOOTH\",\n      payload: myDescriptor,\n    });\n  };\n};\n\nexport const activatePneumatic = (val) => {\n  return async (dispatch, getState) => {\n    const { characteristic } = getState();\n    console.log(characteristic);\n    let encoder = new TextEncoder(\"utf-8\");\n    await characteristic.writeValue(encoder.encode(val));\n    dispatch({\n      type: \"ACTIVATE_PNEUMATIC\",\n      payload: characteristic,\n    });\n  };\n};\n","import { Fab } from \"@mui/material\";\nimport React from \"react\";\nimport BluetoothConnectedIcon from \"@mui/icons-material/BluetoothConnected\";\nimport { useDispatch } from \"react-redux\";\nimport { connectToBluetooth } from \"../actions\";\nimport { Box } from \"@mui/system\";\n\nconst ConnectButton = ({ label, handleEvent }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box textAlign=\"center\">\n      <Fab\n        sx={{ borderRadius: 5 }}\n        onClick={() => dispatch(connectToBluetooth())}\n        variant=\"extended\"\n      >\n        <BluetoothConnectedIcon />\n        Connect\n      </Fab>\n    </Box>\n  );\n};\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Box } from \"@mui/system\";\nimport { Grid } from \"@mui/material\";\n\nconst BleNotSupported = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid>\n          <h1>😔 This Browser does not support Bluetooth</h1>\n        </Grid>\n        <p>\n          If you are using an iPhone please use this&nbsp;\n          <a\n            href=\"https://apps.apple.com/us/app/bluefy-web-ble-browser/id1492822055\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            browser\n          </a>\n          &nbsp;to control the device.\n        </p>\n        <p>\n          If you are using an Android Device, Please use the default Chrome\n          browser, and enable bluetooth settings\n        </p>\n        <p>\n          Chrome supports Bluetooth connections on Mac devices and most Windows\n          computers\n        </p>\n        {/* <p>\n          If you would like to learn more about this project you can check it\n          out over&nbsp;<a href=\"\">here</a>&nbsp;\n        </p> */}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default BleNotSupported;\n","import { CardActionArea, Paper, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport {} from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { activatePneumatic } from \"../actions\";\n\nconst TestButton = ({ pnuematic, color, textColor, title, subtitle }) => {\n  const dispatch = useDispatch();\n  return (\n    <Box sx={{ boxShadow: 6, m: 1, pt: 2 }}>\n      <Paper\n        raised={true}\n        variant=\"outlined\"\n        sx={{\n          display: \"inline-block\",\n          borderRadius: 7,\n          minWidth: 275,\n          minHeight: 350,\n          background: color,\n          color: textColor,\n        }}\n      >\n        <CardActionArea onClick={() => dispatch(activatePneumatic(pnuematic))}>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            <br />\n          </Typography>\n          <Typography sx={{ fontSize: 50 }} variant=\"h1\" component=\"div\">\n            {title}\n          </Typography>\n          <br />\n          <Typography\n            sx={{ fontSize: 30, fontWeight: \"bold\" }}\n            variant=\"h1\"\n            component=\"div\"\n          >\n            {subtitle}\n          </Typography>\n          {/* <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n            adjective\n          </Typography>\n          <Typography variant=\"body2\">\n            well meaning and kindly.\n            <br />\n            <br />\n            <br />\n            <br />\n            {'\"a benevolent smile\"'}\n          </Typography> */}\n        </CardActionArea>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default TestButton;\n","import { Card, CardActionArea, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport {} from \"@mui/material\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TestButton = ({ toSearch, color, textColor, title }) => {\n  return (\n    <Link\n      to={{\n        pathname: \"/scenario\",\n        currentScenario: 1,\n        search: toSearch,\n      }}\n    >\n      <Box m={2} pt={2}>\n        <Card\n          elevation={3}\n          variant=\"outlined\"\n          sx={{\n            display: \"inline-block\",\n            borderRadius: 7,\n            minWidth: 350,\n            minHeight: 350,\n            background: color,\n            color: textColor,\n          }}\n        >\n          <CardActionArea>\n            <Typography\n              sx={{ fontSize: 200, fontWeight: \"bold\" }}\n              variant=\"h1\"\n              component=\"div\"\n            >\n              {title}\n            </Typography>\n          </CardActionArea>\n        </Card>\n      </Box>\n    </Link>\n  );\n};\n\nexport default TestButton;\n","export default [\n  {\n    pnuematic: \"1\",\n    color: \"red\",\n    textColor: \"white\",\n    title: \"👔\",\n    subtitle: \"Neck\",\n  },\n  {\n    pnuematic: \"2\",\n    color: \"white\",\n    textColor: \"black\",\n    title: \"💪\",\n    subtitle: \"Left Upper Arm\",\n  },\n  {\n    pnuematic: \"3\",\n    color: \"green\",\n    textColor: \"white\",\n    title: \"🤛\",\n    subtitle: \"Right Wrist\",\n  },\n  {\n    pnuematic: \"4\",\n    color: \"blue\",\n    textColor: \"white\",\n    title: \"👖\",\n    subtitle: \"Waist\",\n  },\n  {\n    pnuematic: \"1\",\n    color: \"yellow\",\n    textColor: \"black\",\n    title: \"🤜\",\n    subtitle: \"Left Wrist\",\n  },\n  {\n    pnuematic: \"6\",\n    color: \"black\",\n    textColor: \"white\",\n    title: \"💪\",\n    subtitle: \"Right Upper Arm\",\n  },\n];\n","export default [\n  {\n    toSearch: \"?1\",\n    color: \"lightgreen\",\n    textColor: \"white\",\n    title: \"👨‍🍼\",\n  },\n  {\n    toSearch: \"?2\",\n    color: \"lightgreen\",\n    textColor: \"white\",\n    title: \"👨\",\n  },\n  {\n    toSearch: \"?3\",\n    color: \"lightgreen\",\n    textColor: \"white\",\n    title: \"😡\",\n  },\n  {\n    toSearch: \"?4\",\n    color: \"lightgreen\",\n    textColor: \"white\",\n    title: \"👵\",\n  },\n];\n","import React from \"react\";\nimport TestButton from \"../components/TestButton\";\nimport ScenarioButton from \"../components/ScenarioButton\";\nimport testData from \"../data/test-data\";\nimport homeScenarioData from \"../data/home-scenario-data\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Test</h1>\n      <br />\n      <div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n            overflow: \"auto\",\n            display: \"flex\",\n            msOverflowStyle: \"none\",\n          }}\n        >\n          {testData.map((data) => {\n            return (\n              <TestButton\n                pnuematic={data.pnuematic}\n                color={data.color}\n                textColor={data.textColor}\n                title={data.title}\n                subtitle={data.subtitle}\n              />\n            );\n          })}\n        </div>\n      </div>\n\n      <h1>Scenarios</h1>\n      <br />\n      <div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n            overflow: \"auto\",\n            display: \"flex\",\n            msOverflowStyle: \"none\",\n          }}\n        >\n          {homeScenarioData.map((data) => {\n            return (\n              <ScenarioButton\n                toSearch={data.toSearch}\n                color={data.color}\n                textColor={data.textColor}\n                title={data.title}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useSelector } from \"react-redux\";\nimport ConnectPage from \"./pages/ConnectPage\";\nimport BleNotSupported from \"./pages/BleNotSupported\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  const [supportsBluetooth, setSupportsBluetooth] = useState(false);\n  const isConnected = useSelector((state) => state.isConnected);\n\n  useEffect(() => {\n    if (navigator.bluetooth) {\n      setSupportsBluetooth(true);\n    }\n  }, []);\n\n  return (\n    <div>\n      {!supportsBluetooth && !isConnected && (\n        <div>\n          <BleNotSupported />\n        </div>\n      )}\n      {!isConnected && supportsBluetooth && (\n        <div>\n          <ConnectPage />\n        </div>\n      )}\n      {isConnected && (\n        <div>\n          <Home />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n  isConnected: false,\n  connectDevice: {},\n  characteristic: {},\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CONNECT_BLUETOOTH\":\n      return {\n        isConnected: true,\n        connectDevice: action.payload,\n        characteristic: action.payload,\n      };\n    case \"ACTIVATE_PNEUMATIC\":\n      console.log(state);\n      return {\n        isConnected: true,\n        connectDevice: state.connectDevice,\n        characteristic: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"../reducer\";\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import { CardActionArea, Paper, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport {} from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { activatePneumatic } from \"../actions\";\n\nconst ScenesButton = ({ pnuematic, color, textColor, title, audio }) => {\n  const dispatch = useDispatch();\n  let toPlay = new Audio(audio);\n\n  const doScene = () => {\n    toPlay.play();\n    dispatch(activatePneumatic(pnuematic));\n  };\n\n  return (\n    <Box sx={{ boxShadow: 6, m: 1, pt: 2 }}>\n      <Paper\n        raised={true}\n        variant=\"outlined\"\n        sx={{\n          display: \"inline-block\",\n          borderRadius: 7,\n          minWidth: 275,\n          minHeight: 350,\n          background: color,\n          color: textColor,\n        }}\n      >\n        <CardActionArea onClick={() => doScene()}>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            <br />\n          </Typography>\n          <Typography sx={{ fontSize: 50 }} variant=\"h1\" component=\"div\">\n            {title}\n          </Typography>\n        </CardActionArea>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ScenesButton;\n","export default {\n  \"?1\": [\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/r53lhdf0khiohwv/Bab1.mp3?raw=1\",\n    },\n    {\n      pnuematic: \"2\",\n      color: \"black\",\n      textColor: \"white\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/zad6eewju8ac7ud/Bab2.mp3?raw=1\",\n    },\n    {\n      pnuematic: \"4\",\n      color: \"black\",\n      textColor: \"white\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/4rz8x6padr9o5gd/Bab3.mp3?raw=1\",\n    },\n    {\n      pnuematic: \"6\",\n      color: \"black\",\n      textColor: \"white\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/rjemizycuc8fi05/Bab4.mp3?raw=1\",\n    },\n  ],\n  \"?2\": [\n    {\n      pnuematic: \"2\",\n      color: \"black\",\n      textColor: \"white\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/a6vnp8s2ojh6yrj/Bum1.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/xvr60iw00fellwi/Bum2.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/tqkp5dl11s9qtyr/Bum3.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/vc8t6xazqxgnecy/Bum4.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/mkc02u38oont6zx/Bum5.m4a?raw=1\",\n    },\n  ],\n  \"?3\": [\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/iz4o4alo7ct7x2e/Dum1.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/hsj7zmmne1t2kyc/Dum2.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/a4ilj84hmv2r6q5/Dum3.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/anc2dub9xs90d32/Dum4.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/npv11fnfwmvm2ac/Dum5.m4a?raw=1\",\n    },\n  ],\n  \"?4\": [\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/qb51tk651t8ws57/Ma1.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/vwmqb8dlx548u7j/Ma2.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/ejdr5ofs3ya2s0b/Ma3.m4a?raw=1\",\n    },\n    {\n      pnuematic: \"1\",\n      color: \"lightgrey\",\n      textColor: \"black\",\n      title: \"☠️\",\n      audio: \"https://www.dropbox.com/s/gbmqnfpdnx5urbp/Ma4.m4a?raw=1\",\n    },\n  ],\n};\n","import * as React from \"react\";\nimport ArrowCircleRightIcon from \"@mui/icons-material/ArrowCircleRight\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport ScenesButton from \"../components/ScenesButton\";\nimport scenarioData from \"../data/scenario-data\";\n\nexport default function ScenarioPage() {\n  const location = useLocation();\n  console.log(location.search);\n  const toSearch = location.search;\n\n  return (\n    <div>\n      <h1>Title</h1>\n      <Link to=\"/\">\n        <ArrowCircleRightIcon />\n      </Link>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          overflow: \"auto\",\n          display: \"flex\",\n          msOverflowStyle: \"none\",\n        }}\n      >\n        {scenarioData[toSearch].map((doings) => {\n          return (\n            <ScenesButton\n              pnuematic={doings.pnuematic}\n              color={doings.color}\n              textColor={doings.textColor}\n              title={doings.title}\n              audio={doings.audio}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport BleNotSupported from \"./pages/BleNotSupported\";\nimport ScenarioPage from \"./pages/ScenarioPage\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router>\n        <Routes>\n          <Route path=\"/notFound\" element={<BleNotSupported />} />\n          <Route path=\"/scenario\" element={<ScenarioPage />} />\n          <Route path=\"/\" element={<App />} />\n        </Routes>\n        {/* <App /> */}\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}